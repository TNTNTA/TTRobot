From b21741aa5997a1d656942daf5cc2c3d90593c9bd Mon Sep 17 00:00:00 2001
From: Tao Tang <15642339119@163.com>
Date: Sat, 14 Jan 2023 16:09:27 +0800
Subject: [PATCH] [TT] modify uboot config

1. support lcd display
2. support ethernet
---
 arch/arm/dts/stm32mp157d-robot.dts  |  20 +++-
 arch/arm/dts/stm32mp157d-robot.dtsi |  88 +++++++---------
 configs/stm32mp15_trusted_defconfig |   5 +-
 drivers/net/phy/phy.c               | 153 ++++++++++++++++++++++------
 drivers/video/stm32/stm32_ltdc.c    |  43 +++++++-
 include/configs/stm32mp1.h          |   3 +
 6 files changed, 226 insertions(+), 86 deletions(-)

diff --git a/arch/arm/dts/stm32mp157d-robot.dts b/arch/arm/dts/stm32mp157d-robot.dts
index 1878ea658c..91e687f6dc 100644
--- a/arch/arm/dts/stm32mp157d-robot.dts
+++ b/arch/arm/dts/stm32mp157d-robot.dts
@@ -12,8 +12,8 @@
 #include "stm32mp157d-robot.dtsi"
 
 / {
-	model = "STMicroelectronics STM32MP157D TT Robot board";
-	compatible = "st,stm32mp157d-ed1", "st,stm32mp157";
+	model = "STMicroelectronics STM32MP157D TT Robot board V2.2";
+	compatible = "st,stm32mp157d-robot", "st,stm32mp157";
 
 	chosen {
 		stdout-path = "serial0:115200n8";
@@ -31,3 +31,19 @@
 	contiguous-area = <&gpu_reserved>;
 	status = "okay";
 };
+
+&ltdc {
+	status = "okay";
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ltdc_ep0_out: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&panel_in_rgb>;
+		};
+	};
+};
+
+
diff --git a/arch/arm/dts/stm32mp157d-robot.dtsi b/arch/arm/dts/stm32mp157d-robot.dtsi
index dd03b5b02f..d89eb02cf2 100644
--- a/arch/arm/dts/stm32mp157d-robot.dtsi
+++ b/arch/arm/dts/stm32mp157d-robot.dtsi
@@ -130,6 +130,30 @@
 		regulator-max-microvolt = <5000000>;
 		regulator-always-on;
 	};
+
+	panel_backlight: panel-backlight {
+		compatible = "gpio-backlight";
+		gpios = <&gpioe 15 GPIO_ACTIVE_HIGH>;
+		default-on;
+		status = "okay";
+	};
+
+	panel_rgb: panel-rgb {
+		compatible = "simple-panel";
+		// pinctrl-names = "default", "sleep";
+		pinctrl-names = "default";
+		pinctrl-0 = <&ltdc_pins_b>; 
+		// pinctrl-1 = <&ltdc_pins_sleep_b>;
+		backlight = <&panel_backlight>;
+		status = "okay";
+
+		port {
+			panel_in_rgb: endpoint {
+				remote-endpoint = <&ltdc_ep0_out>;
+			};
+		};
+	};
+
 };
 
 &cpu0{
@@ -214,7 +238,7 @@
 	st,neg-edge;
 	bus-width = <8>;
 	vmmc-supply = <&v3v3>;
-    keep-power-in-suspend;
+    	keep-power-in-suspend;
 	status = "okay";
 };
 
@@ -250,18 +274,18 @@
 	status = "okay";
 };
 
-&usbotg_hs {
-	phys = <&usbphyc_port1 0>;
-	phy-names = "usb2-phy";
-	usb-role-switch;
-	status = "okay";
+// &usbotg_hs {
+// 	phys = <&usbphyc_port1 0>;
+// 	phy-names = "usb2-phy";
+// 	usb-role-switch;
+// 	status = "okay";
 
-	port {
-		usbotg_hs_ep: endpoint {
-			remote-endpoint = <&con_usbotg_hs_ep>;
-		};
-	};
-};
+// 	port {
+// 		usbotg_hs_ep: endpoint {
+// 			remote-endpoint = <&con_usbotg_hs_ep>;
+// 		};
+// 	};
+// };
 
 &usbphyc {
 	status = "okay";
@@ -278,8 +302,8 @@
 &ethernet0 {
 	status = "okay";
 	pinctrl-0 = <&ethernet0_rgmii_pins_a>;
-	pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
-	pinctrl-names = "default", "sleep";
+	// pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
+	pinctrl-names = "default";
 	phy-mode = "rgmii-id";
 	max-speed = <1000>;
 	phy-handle = <&phy0>;
@@ -292,40 +316,4 @@
 			reg = <0>;
 		};
 	};
-};
-
-
-&i2c1 {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&i2c1_pins_b>;
-	pinctrl-1 = <&i2c1_pins_sleep_b>;
-	i2c-scl-rising-time-ns = <100>;
-	i2c-scl-falling-time-ns = <7>;
-	status = "okay";
-	/delete-property/dmas;
-	/delete-property/dma-names;
-
-	stusb1600@28 {
-		compatible = "st,stusb1600";
-		reg = <0x28>;
-		interrupts = <2 IRQ_TYPE_EDGE_FALLING>;
-		interrupt-parent = <&gpiog>;
-		pinctrl-names = "default";
-		pinctrl-0 = <&stusb1600_pins_a>;
-		status = "okay";
-		vdd-supply = <&vin>;
-
-		connector {
-			compatible = "usb-c-connector";
-			label = "USB-C";
-			power-role = "dual";
-			power-opmode = "default";
-
-			port {
-				con_usbotg_hs_ep: endpoint {
-					remote-endpoint = <&usbotg_hs_ep>;
-				};
-			};
-		};
-	};
 };
\ No newline at end of file
diff --git a/configs/stm32mp15_trusted_defconfig b/configs/stm32mp15_trusted_defconfig
index 2161ccbefa..9a0495a048 100644
--- a/configs/stm32mp15_trusted_defconfig
+++ b/configs/stm32mp15_trusted_defconfig
@@ -9,13 +9,13 @@ CONFIG_TARGET_ST_STM32MP15x=y
 CONFIG_CMD_STM32PROG=y
 CONFIG_TYPEC_STUSB160X=y
 CONFIG_ENV_OFFSET_REDUND=0x4C0000
-CONFIG_DEFAULT_DEVICE_TREE="stm32mp157c-ev1"
+CONFIG_DEFAULT_DEVICE_TREE="stm32mp157d-robot"
 CONFIG_DISTRO_DEFAULTS=y
 CONFIG_FIT=y
 CONFIG_BOOTDELAY=1
 CONFIG_BOOTCOMMAND="run bootcmd_stm32mp"
 CONFIG_FDT_SIMPLEFB=y
-CONFIG_SYS_PROMPT="STM32MP> "
+CONFIG_SYS_PROMPT="TTRobot> "
 CONFIG_CMD_ADTIMG=y
 # CONFIG_CMD_ELF is not set
 CONFIG_CMD_ERASEENV=y
@@ -141,3 +141,4 @@ CONFIG_WDT_STM32MP=y
 CONFIG_ERRNO_STR=y
 CONFIG_FDT_FIXUP_PARTITIONS=y
 CONFIG_LMB_RESERVED_REGIONS=16
+CONFIG_STM32MP15x_STM32IMAGE=y
diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index 67789897c2..e111559a1b 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -10,18 +10,16 @@
 #include <common.h>
 #include <console.h>
 #include <dm.h>
-#include <log.h>
 #include <malloc.h>
 #include <net.h>
 #include <command.h>
 #include <miiphy.h>
 #include <phy.h>
 #include <errno.h>
-#include <linux/bitops.h>
-#include <linux/delay.h>
 #include <linux/err.h>
 #include <linux/compiler.h>
-
+ #include <linux/delay.h>
+ 
 DECLARE_GLOBAL_DATA_PTR;
 
 /* Generic PHY support and helper functions */
@@ -212,6 +210,95 @@ int genphy_config_aneg(struct phy_device *phydev)
 	return result;
 }
 
+/***************alientek zuozhongkai add 2021/4/23****************/
+#define YT8511_REG_DEBUG_ADDR_OFFSET		0x1e
+#define YT8511_REG_DEBUG_DATA				0x1f
+
+static int yt8511_rd_ext(struct phy_device *phydev, u32 regnum)
+{
+	int val;
+
+	phy_write(phydev, MDIO_DEVAD_NONE, YT8511_REG_DEBUG_ADDR_OFFSET, regnum);
+	val = phy_read(phydev, MDIO_DEVAD_NONE, YT8511_REG_DEBUG_DATA);
+	
+	return val;
+}
+
+static int yt8511_wr_ext(struct phy_device *phydev, u32 regnum, u16 val)
+{
+	int ret;
+
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, YT8511_REG_DEBUG_ADDR_OFFSET, regnum);
+	ret = phy_write(phydev, MDIO_DEVAD_NONE, YT8511_REG_DEBUG_DATA, val);
+	
+	return ret;
+}
+
+int yt8511_config_txdelay(struct phy_device *phydev, u8 delay)
+{
+        int ret;
+        int val;
+
+        /* disable auto sleep */
+        val = yt8511_rd_ext(phydev, 0x27);
+        if (val < 0)
+                return val;
+
+        val &= (~BIT(15));
+
+        ret = yt8511_wr_ext(phydev, 0x27, val);
+        if (ret < 0)
+                return ret;
+
+        /* enable RXC clock when no wire plug */
+        val = yt8511_rd_ext(phydev, 0xc);
+        if (val < 0)
+                return val;
+
+        /* ext reg 0xc b[7:4]
+		Tx Delay time = 150ps * N – 250ps
+        */
+        val &= ~(0xf << delay);
+		val |= (0x7 << delay);	//150ps * 7 - 250ps
+        ret = yt8511_wr_ext(phydev, 0xc, val);
+
+        return ret;
+}
+
+int yt8511_config_out_125m(struct phy_device *phydev)
+{
+        int ret;
+        int val;
+
+		/* disable auto sleep */
+        val = yt8511_rd_ext(phydev, 0x27);
+        if (val < 0)
+                return val;
+
+        val &= (~BIT(15));
+
+        ret = yt8511_wr_ext(phydev, 0x27, val);
+        if (ret < 0)
+                return ret;
+
+        /* enable RXC clock when no wire plug */
+        val = yt8511_rd_ext(phydev, 0xc);
+        if (val < 0)
+                return val;
+
+        /* ext reg 0xc.b[2:1]
+        00-----25M from pll;
+        01---- 25M from xtl;(default)
+        10-----62.5M from pll;
+        11----125M from pll(here set to this value)
+        */
+        val |= (3 << 1);
+        ret = yt8511_wr_ext(phydev, 0xc, val);
+
+        return ret;
+}
+/*********************end add***************************/
+
 /**
  * genphy_update_link - update link status in @phydev
  * @phydev: target phy_device struct
@@ -224,6 +311,17 @@ int genphy_update_link(struct phy_device *phydev)
 {
 	unsigned int mii_reg;
 
+	/************alientek zuozhongkai add 2021/4/23********/
+	unsigned int phyid1, phyid2;
+
+	phyid1 = phy_read(phydev, MDIO_DEVAD_NONE, MII_PHYSID1);
+	phyid2 = phy_read(phydev, MDIO_DEVAD_NONE, MII_PHYSID2);
+	if((phyid1 == 0X0) && (phyid2 == 0x10a)) {
+		yt8511_config_out_125m(phydev);
+		yt8511_config_txdelay(phydev, 4);
+	}
+	/*********************end add***************************/
+
 	/*
 	 * Wait if the link is up, and autonegotiation is in progress
 	 * (ie - we're capable and it's not done)
@@ -247,7 +345,7 @@ int genphy_update_link(struct phy_device *phydev)
 			/*
 			 * Timeout reached ?
 			 */
-			if (i > (PHY_ANEG_TIMEOUT / 50)) {
+			if (i > PHY_ANEG_TIMEOUT) {
 				printf(" TIMEOUT !\n");
 				phydev->link = 0;
 				return -ETIMEDOUT;
@@ -436,7 +534,7 @@ int genphy_config(struct phy_device *phydev)
 int genphy_startup(struct phy_device *phydev)
 {
 	int ret;
-
+	
 	ret = genphy_update_link(phydev);
 	if (ret)
 		return ret;
@@ -548,12 +646,10 @@ int phy_init(void)
 #ifdef CONFIG_PHY_FIXED
 	phy_fixed_init();
 #endif
-#ifdef CONFIG_PHY_NCSI
-	phy_ncsi_init();
-#endif
 #ifdef CONFIG_PHY_XILINX_GMII2RGMII
 	phy_xilinx_gmii2rgmii_init();
 #endif
+
 	genphy_init();
 
 	return 0;
@@ -786,27 +882,17 @@ static struct phy_device *get_phy_device_by_mask(struct mii_dev *bus,
 						 uint phy_mask,
 						 phy_interface_t interface)
 {
+	int i;
 	struct phy_device *phydev;
-	int devad[] = {
-		/* Clause-22 */
-		MDIO_DEVAD_NONE,
-		/* Clause-45 */
-		MDIO_MMD_PMAPMD,
-		MDIO_MMD_WIS,
-		MDIO_MMD_PCS,
-		MDIO_MMD_PHYXS,
-		MDIO_MMD_VEND1,
-	};
-	int i, devad_cnt;
-
-	devad_cnt = sizeof(devad)/sizeof(int);
+
 	phydev = search_for_existing_phy(bus, phy_mask, interface);
 	if (phydev)
 		return phydev;
-	/* try different access clauses  */
-	for (i = 0; i < devad_cnt; i++) {
+	/* Try Standard (ie Clause 22) access */
+	/* Otherwise we have to try Clause 45 */
+	for (i = 0; i < 5; i++) {
 		phydev = create_phy_by_mask(bus, phy_mask,
-					    devad[i], interface);
+					    i ? i : MDIO_DEVAD_NONE, interface);
 		if (IS_ERR(phydev))
 			return NULL;
 		if (phydev)
@@ -1018,12 +1104,6 @@ struct phy_device *phy_connect(struct mii_dev *bus, int addr,
 #ifdef CONFIG_PHY_FIXED
 	phydev = phy_connect_fixed(bus, dev, interface);
 #endif
-
-#ifdef CONFIG_PHY_NCSI
-	if (!phydev)
-		phydev = phy_device_create(bus, 0, PHY_NCSI_ID, false, interface);
-#endif
-
 #ifdef CONFIG_PHY_XILINX_GMII2RGMII
 	if (!phydev)
 		phydev = phy_connect_gmii2rgmii(bus, dev, interface);
@@ -1032,10 +1112,21 @@ struct phy_device *phy_connect(struct mii_dev *bus, int addr,
 	if (!phydev)
 		phydev = phy_find_by_mask(bus, mask, interface);
 
+	/***********zuozhongkai add 2021/4/23****************/	
+	if (!phydev) /* 如果还没有获取到phy_device，尝试YT8511 	*/
+	{
+		addr = 0;
+		mask = (addr >= 0) ? (1 << addr) : 0xffffffff;
+		phydev = phy_find_by_mask(bus, mask, interface);	
+	}
+	/******************end add****************************/
+
 	if (phydev)
 		phy_connect_dev(phydev, dev);
 	else
 		printf("Could not get PHY for %s: addr %d\n", bus->name, addr);
+
+
 	return phydev;
 }
 
diff --git a/drivers/video/stm32/stm32_ltdc.c b/drivers/video/stm32/stm32_ltdc.c
index 2f3427a32e..fe36c6d87a 100644
--- a/drivers/video/stm32/stm32_ltdc.c
+++ b/drivers/video/stm32/stm32_ltdc.c
@@ -154,6 +154,46 @@ enum stm32_ltdc_pix_fmt {
 	PF_AL88
 };
 
+#ifdef TT_ROBOT_LCD_4_800_480
+static const struct display_timing timing_param_4_800_480 = {
+	.pixelclock = {.min = 33300000, .typ = 33300000, .max = 33300000,},
+	.hactive = {.min = 800, .typ = 800, .max = 800,},
+	.hfront_porch = {.min = 40, .typ = 40, .max = 40,},
+	.hback_porch = {.min = 88, .typ = 88, .max = 88,},
+	.hsync_len = {.min = 48, .typ = 48, .max = 48,},
+	.vactive = {.min = 480, .typ = 480, .max = 480,},
+	.vfront_porch = {.min = 13, .typ = 13, .max = 13,},
+	.vback_porch = {.min = 32, .typ = 32, .max = 32,},
+	.vsync_len = {.min = 3, .typ = 3, .max = 3,},
+};
+
+static int robot_panel_get_display_timing(
+                                        struct display_timing *timings){
+        memcpy(timings, &timing_param_4_800_480, sizeof(*timings));
+        return 0;
+};
+#endif
+
+#ifdef TT_ROBOT_LCD_7_800_480
+static const struct display_timing timing_param_7_800_480 = {
+	.pixelclock = {.min = 33300000, .typ = 33300000, .max = 33300000,},
+	.hactive = {.min = 800, .typ = 800, .max = 800,},
+	.hfront_porch = {.min = 210, .typ = 210, .max = 210,},
+	.hback_porch = {.min = 46, .typ = 46, .max = 46,},
+	.hsync_len = {.min = 2, .typ = 2, .max = 2,},
+	.vactive = {.min = 480, .typ = 480, .max = 480,},
+	.vfront_porch = {.min = 22, .typ = 22, .max = 22,},
+	.vback_porch = {.min = 23, .typ = 23, .max = 23,},
+	.vsync_len = {.min = 2, .typ = 2, .max = 2,},
+};
+
+static int robot_panel_get_display_timing(
+                                        struct display_timing *timings){
+        memcpy(timings, &timing_param_7_800_480, sizeof(*timings));
+        return 0;
+};
+#endif
+
 /* TODO add more color format support */
 static u32 stm32_ltdc_get_pixel_format(enum video_log2_bpp l2bpp)
 {
@@ -364,7 +404,8 @@ static int stm32_ltdc_probe(struct udevice *dev)
 		return ret;
 	}
 
-	ret = panel_get_display_timing(panel, &timings);
+	//ret = panel_get_display_timing(panel, &timings);
+	ret = robot_panel_get_display_timing(&timings);
 	if (ret) {
 		ret = fdtdec_decode_display_timing(gd->fdt_blob,
 						   dev_of_offset(panel),
diff --git a/include/configs/stm32mp1.h b/include/configs/stm32mp1.h
index 72424abb8b..302fd3513b 100644
--- a/include/configs/stm32mp1.h
+++ b/include/configs/stm32mp1.h
@@ -82,6 +82,7 @@
 #define CONFIG_BMP_32BPP
 #endif
 
+#define TT_ROBOT_LCD_4_800_480
 /*****************************************************************************/
 #ifdef CONFIG_DISTRO_DEFAULTS
 /*****************************************************************************/
@@ -164,4 +165,6 @@
 #endif /* ifndef CONFIG_SPL_BUILD */
 #endif /* ifdef CONFIG_DISTRO_DEFAULTS*/
 
+//#define CONFIG_CMD_BOOTD
+
 #endif /* __CONFIG_H */
